apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin
//apply plugin: 'android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.andy.infrastructure"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dexOptions {
        jumboMode = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dataBinding {
        enabled = true
    }

    // 签名配置
    signingConfigs {
        release {
            try {
                storeFile file("./keystore/release.keystore")
                storePassword "andy37"
                keyAlias "andy37"
                keyPassword "andy37"
            } catch (ex) {
                throw new InvalidUserDataException(ex.toString())
            }
        }

        debug{
            storeFile file("./keystore/debug.keystore")
            storePassword "debug123"
            keyAlias "debug"
            keyPassword "debug123"
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['lib']
        }
    }

    repositories {
        flatDir {
            dirs 'lib'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(path: ':baselibrary')
    compile project(':formmatcher')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile "junit:junit:" + rootProject.junit
    compile "com.android.support:appcompat-v7:" + rootProject.support
    compile "com.android.support:design:"+rootProject.support
    compile "com.android.support:cardview-v7:" +rootProject.support
    compile "com.android.support:recyclerview-v7:" + rootProject.support
    compile 'com.android.support:multidex:1.0.1'
    compile "com.android.support:support-v4:$rootProject.support"
    compile "com.android.support.constraint:constraint-layout:" + rootProject.support_constraint_layout
    compile files('lib/testSo.jar')
    compile 'com.sothree.slidinguppanel:library:3.3.1'
    compile project(':baselibrary')
//    compile project(':custom-view')
    compile 'com.google.zxing:core:3.3.0'

    //android arch
    compile 'android.arch.lifecycle:extensions:' + rootProject.archLifecycleVersion
    compile 'android.arch.persistence.room:runtime:' + rootProject.archLifecycleVersion
    annotationProcessor "android.arch.lifecycle:compiler:" + rootProject.archLifecycleVersion
    annotationProcessor "android.arch.persistence.room:compiler:" + rootProject.archLifecycleVersion
}

//for
configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '25.1.0'
            }
        }
    }
}